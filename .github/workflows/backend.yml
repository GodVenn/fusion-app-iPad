name: Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: backend/api

jobs:
  build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Build project and dependencies
        run: dotnet build

  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build project and dependencies
        run: dotnet build

      - name: Run tests
        run: dotnet test

  check_formatting:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x' # SDK Version to use; x will use the latest version of the 6.0 channel

    # Format the output of dotnet format
    - name: Add dotnet-format problem matcher
      uses: xt0rted/dotnet-format-problem-matcher@v1

    # Install dotnet format as a global tool
    - name: Install dotnet format
      run: dotnet tool restore

    # Run dotnet format --check
    # By default, the task ensure the exit code is 0
    # -w info checks for whitespace errors
    # -s info checks for style errors at info level or above
    # -a info checks for analyzer errors at info level or above
    # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
    # So the task will fail
    - name: Run dotnet format
      run: dotnet format -w -s info -a info --check --verbosity diagnostic
